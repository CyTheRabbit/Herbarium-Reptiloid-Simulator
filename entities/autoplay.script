local flow = require "m.flow"
local wait = flow
local monarch = require "monarch.monarch"
local global = require "global"

local hash = hash

local function send_ship_at(pos, props)
	local message = { destination = pos, properties = props }
	msg.post("game:/port", "spawn_ship", message)
end

local function send_ship_to(url, props)
	send_ship_at(go.get_world_position(url), props)
end

local function say(...)
	monarch.show(hash "dialogue", nil, { text = { ... }, time = time })
	wait.delay(0.25)
end

local function tutorial()
	msg.post("game:/tools", "release_input_focus")
	wait.delay(0.5)

	send_ship_to(msg.url "game:/planet1", { speed = 15 })

	wait.delay(3)
	say(
	"Людишки начали посылать свои жалкие шатлы на другие планеты.",
	"Они могут узнать, что космос не бесконечный!\nНельзя этого допустить!",
	"Ты! Живо сделай что-нибудь!\n\nВозьми космос вон там и положи его перед шатлом, чтобы он не столкнулся с краем бездны!")

	msg.post("game:/tools", "acquire_input_focus")

	local message_id = flow.until_message(hash "flight_done", hash "hit")

	local reaction
	if message_id == hash "flight_done" then
		wait.delay(1)
		reaction = "Фух, они не увидели...\nКак бы на нас смотрели илюминаты если бы мы не справились?"
	elseif message_id == hash "hit" then
		wait.delay(0.25)
		reaction = "Проклятье! Шатл взорвался!\nЧто о нас теперь подумают иллюминаты?"
	end
	say(reaction,
	"Теперь это твоя работа.\nБудешь следить за тем, чтобы людишки ничего не подозревали.",
	"Справа шкала твоего космоса и шкала паники.\nНе допусти, чтобы паника добралась до максимума!")
end

local function session()
	math.randomseed(os.clock())

	local data = monarch.data(hash "game")
	local do_tutorial = data and data.tutorial

	if do_tutorial then
		tutorial()
	end

	local delay = 10.0
	for i = 1, 7 do
		flow.delay(delay)
		if delay > 5 then
			delay = delay - 0.5
		end
		msg.post("game:/port", "spawn_ship")
	end
end

function init(self)
	self.flow = flow.start(session)
end

function final(self)
	flow.stop(self.flow)
end

function update(self, dt)
	flow.update(dt)
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
